{
  "name": "ai-ppt-gen-functions",
  "version": "3.1.0",
  "description": "AI PowerPoint Generator - Optimized Firebase Cloud Functions",
  "author": "AI PowerPoint Generator Team",
  "license": "MIT",
  "private": true,
  "engines": {
    "node": "22"
  },
  "main": "lib/index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "serve": "npm run build && firebase emulators:start --only functions",
    "start": "npm run dev",
    "dev": "npm run build && firebase emulators:start --only functions",
    "dev:watch": "concurrently --kill-others --prefix-colors \"cyan,magenta\" --names \"BUILD,EMULATOR\" \"npm run build:watch\" \"wait-on lib/index.js && firebase emulators:start --only functions --import=./emulator-data --export-on-exit=./emulator-data\"",
    "dev:debug": "npm run build && firebase emulators:start --only functions --inspect-functions",
    "deploy": "npm run build && firebase deploy --only functions",
    "logs": "firebase functions:log",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:themes": "npm run build && node lib/scripts/runThemeTests.js",
    "test:themes:verbose": "ts-node src/scripts/runThemeTests.ts --verbose",
    "test:styles": "npm run build && node lib/scripts/runStyleTests.js",
    "test:styles:fonts": "npm run build && node lib/scripts/runStyleTests.js fonts",
    "test:styles:colors": "npm run build && node lib/scripts/runStyleTests.js colors",
    "test:styles:formatting": "npm run build && node lib/scripts/runStyleTests.js formatting",
    "test:styles:binary": "npm run build && node lib/scripts/runStyleTests.js binary",
    "test:progressive": "npm run build && node lib/scripts/runProgressiveTests.js",
    "test:progressive:level1": "npm run build && node lib/scripts/runProgressiveTests.js level1",
    "test:progressive:level2": "npm run build && node lib/scripts/runProgressiveTests.js level2",
    "test:progressive:level3": "npm run build && node lib/scripts/runProgressiveTests.js level3",
    "test:progressive:level4": "npm run build && node lib/scripts/runProgressiveTests.js level4",
    "test:progressive:level5": "npm run build && node lib/scripts/runProgressiveTests.js level5",
    "test:progressive:level6": "npm run build && node lib/scripts/runProgressiveTests.js level6",
    "test:progressive:level7": "npm run build && node lib/scripts/runProgressiveTests.js level7",
    "test:progressive:level8": "npm run build && node lib/scripts/runProgressiveTests.js level8",
    "test:progressive:level9": "npm run build && node lib/scripts/runProgressiveTests.js level9",
    "test:progressive:level10": "npm run build && node lib/scripts/runProgressiveTests.js level10",
    "test:progressive:level11": "npm run build && node lib/scripts/runProgressiveTests.js level11",
    "test:pipeline": "npm run build && node lib/scripts/runPipelineTests.js",
    "test:pipeline:api": "npm run build && node lib/scripts/runPipelineTests.js api",
    "test:pipeline:themes": "npm run build && node lib/scripts/runPipelineTests.js themes",
    "test:pipeline:volume": "npm run build && node lib/scripts/runPipelineTests.js volume",
    "test:themes:basic": "npm run build && node lib/scripts/runThemeTests.js basic",
    "test:themes:advanced": "npm run build && node lib/scripts/runThemeTests.js advanced",
    "test:themes:corporate": "npm run build && node lib/scripts/runThemeTests.js corporate",
    "test:real-world": "npm run build && node lib/scripts/runRealWorldTests.js",
    "test:real-world:basic": "npm run build && node lib/scripts/runRealWorldTests.js basic",
    "test:real-world:endpoints": "npm run build && node lib/scripts/runRealWorldTests.js endpoints",
    "test:real-world:themes": "npm run build && node lib/scripts/runRealWorldTests.js themes",
    "test:isolate-repair": "npm run build && node lib/scripts/isolateRepairIssue.js",
    "test:isolate-font-metadata": "npm run build && node lib/scripts/isolateFontAndMetadata.js",
    "test:isolate-content-types": "npm run build && node lib/scripts/isolateContentTypes.js",
    "test:simple-generator": "npm run build && node lib/scripts/testSimpleGenerator.js",
    "test:comprehensive-repair": "npm run build && node lib/scripts/comprehensiveRepairAnalysis.js",
    "test:deep-buffer": "npm run build && node lib/scripts/deepBufferAnalysis.js",
    "test:minimal-pptx": "npm run build && node lib/scripts/minimalPptxTest.js",
    "test:alternative-output": "npm run build && node lib/scripts/alternativeOutputTest.js",
    "test:ultimate-repair": "npm run build && node lib/scripts/ultimateRepairFix.js",
    "clean": "rm -rf lib",
    "clean:ports": "pkill -f 'firebase emulators' || true && lsof -ti:5003 | xargs kill -9 || true"
  },
  "dependencies": {
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.19",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "firebase-admin": "^12.6.0",
    "firebase-functions": "^6.0.1",
    "helmet": "^8.1.0",
    "openai": "^5.12.2",
    "pptxgenjs": "^4.0.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@types/node": "^24.2.1",
    "@types/supertest": "^6.0.2",
    "concurrently": "^8.2.2",
    "firebase-functions-test": "^3.1.0",
    "jest": "^29.7.0",
    "supertest": "^6.3.4",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
    "wait-on": "^8.0.4"
  },
  "jest": {
    "testEnvironment": "node",
    "preset": "ts-jest",
    "roots": [
      "<rootDir>/test"
    ],
    "testMatch": [
      "**/*.test.js",
      "**/*.test.ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "moduleFileExtensions": [
      "ts",
      "js",
      "json"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/index.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  },
  "keywords": [
    "ai",
    "powerpoint",
    "presentation",
    "firebase",
    "cloud-functions",
    "openai",
    "typescript"
  ]
}
